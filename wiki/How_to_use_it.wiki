<wiki:toc />
= Overview =
Since GISOO is an integration of Simulink and Cooja, it is necessary to create different parts of our desired system in the following manner:
  *Physical system (Plant) should be modelled in Simulink.
  *Sensors, Actuator, Relays and their Wireless communication will be created in Cooja.
  *Controller can be located in Simulink or Cooja.

In this section you can find all the required details for each step including several screen shots that can help you to follow the procedure.

 = Cooja preparation =
For preparing the Cooja, we have to execute it and create a new simulation including our required motes. Finally we must connect the sensors, actuators and all of the motes which need serial communication to the same motes in Simulink. These steps has been explained in below:
  == Cooja Execution  ==
For executing the Cooja first we should open a shell window of Cygwin and change the directory to the  Cooja directory. In this sample, the Cygwin has been located in the C:\\cygwin\  and contiki folder which contains the Cooja is located in the C:\\contiki-2.6\ . You can see the needed commands for changing the directories in the picture. Finally in the cooja folder you should use the “ant run” command to execute it. 

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/CoojaExecution.png" height="282px" width="837px" >

  == Create a new simulation ==
Excuting the cooja, we should create a new simulation environment which can be done from the file menu as has been shown in the picture:

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/NewSimulation.png" >

In the window of new simulation creator, you can select a name for your simulation and select your desired radio medium. You can also select the random seed for your simulation which should be the same if you want to reload exactly the same simulation. The "Create new simulation" window has been shown below:

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/Simulation_Start_config.png" >

In the result of the mentioned steps the new simulation environment will be created such as following picture:

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/CoojaEnv.png" >
  == Adding motes to the simulation ==
After creating the new simulation environment we have to add all the motes to the simulation. Although Cooja supports different types of motes and operating systems, we used Sky Mote and [http://en.wikipedia.org/wiki/TinyOS TinyOS] in all of our experiments and all the available codes have been developed in [http://en.wikipedia.org/wiki/NesC nesC] (for [http://en.wikipedia.org/wiki/TinyOS TinyOS]).

Inorder to add a new mote to the simulation you can use the Motes menu and follow the "Motes->Add motes->Create new mote type->Sky mote" as it has been shown in the following picture:

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/MoteCreation.png" >

In the opened window you shoul follow these steps:
  #Select a name for you mote.
  #Use the browse button to find the main.exe of the application that you want to load it in your mote. (In TinyOS when you compile your nesC application for instant by using the "make telosb", it will automatically create a build folder for that application which contains some files including the "main.exe". This file will be used in Cooja as a mote application. You can check [http://tinyos.stanford.edu/tinyos-wiki/index.php/TinyOS_Tutorials TinyOS tutorials] For more detail about its commands.)  
  #Create the mote.
These steps has been shown in the following picture:

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/MoteCreationSteps2.png" >

After selecting the "main.exe" and creating the mote, the next window will ask you about the number of desired motes from that application and the location of the motes which by default will be selected randomly.

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/MotePositioning.png" >

Finally after the prevouse procedure the virtual mote will be created. The number which has been appeared on each mote is its mote-id and its selected automatically and in-order whic is not configurable by user. This is an important for the applications that each mote should have an especific id. For these type of scenarios you should create motes in an order that each mote receive your desired id.

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/CreatedMote2.png" >
  == Activating the SimulikConnector plug-in ==
In order to connect motes in Cooja to the Simulink you need to use the Simulink Connector plug-in which you previously download it from [????????????????] and added it to your Cooja folder (It has been explained here ???????????) But in order to use this plug-in one time you need to select and activate it in the Cooja extension list which you can reach and select it in "Setting-> Cooja extensions".

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/CoojaExtensionsSetting.png" >
  == Executing the SimulinkConnector plug-in ==
Now for each mote that you want to connect it to its mirror mote in Simulink, you have to write click on that mote and select "Mote tools Sky1 -> SimmulinkConnector". You can see the procedure in the picture below:


<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/SimulinkConnectorSelection.png" >

In the result of previous step the Simulink Connector plug-in for the selected mote will be created. This plug in will connect this mote to the mirror mote (mote with the same mote-id) in Simulink.

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/SimulinkConnectorPlug-in.png" >

 = Simulink preparation =
During the installation section "Gisoo library" should already be added to the Simulink (you can see the instruction here????????????????). Then you have access to all the component which you need to be able to run your simulation in GISOO. You can see the components of the library in the following picture.

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/Simulink/GISOOLib.png" >
  == Adding Cooja platform ==
For the first step to create the simulation environment in Cooja you need to add "Cooja Platform" block to your simulation environment. This block is the place that simulate Cooja inside the Simulink. It will contain all the necessary motes and also handle the synchronization and communication between Simulink and Cooja. (More details will be explained in the next steps). next picture shows the "Cooja platform" block.

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/Simulink/CoojaPlatform.png" >

  == Adding Mote to the Cooja platform ==
In the next step, the necessary motes should be added inside the Cooja platform block. THis can be done by double click on the CoojaPlatform block and drag a "SkyMote" block from the "Gisoo-library" to the "CoojaPlatform" block. On the first attempt to add a mote inside the Cooja platform you may face a message which ask you to disable the link to the library and it should be done by clicking on the "disable" part in the pop-up message, as it has shown in the following picture. (If you did not face this message you can just add your mote inside the "Cooja platform" with out any concern)


<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/Simulink/LinkDisable.png" >

Finally you should add all the necessary mote to the CoojaPlatform. In fact all the motes which are need to be in contact with the plant such as sensors or actuators or motes which are doing the serial communications should be added to the Cooja platform.After adding each mote to the platform it is necessary to double click on them an set their mote-id exactly the same as the id of their mirror motes in the Cooja. (Each mote in Simulink can only communicate with the mote with the same id in Cooja.)

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/Simulink/AddingMote.png" >
  == Adding ADC/DAC connectors ==
For each mote, according to its action you should add the required ADC or DAC connector component. For instance if you have added a mote to act as a sensor which shouid sense some data on the ADC0 pin, then you have to connect the ADC-Connector component to ADC0 input of that mote, or you want to receive some actuation data on the DAC0, you need to add the DAC connector component on the DAC0 output of your mote. these components and their and their location has been shown in the following picture.

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/Simulink/ADC-DAC-Connectors.jpg" >

  == Adding the plant model ==
In the final step we need to add a model of our plant which can be modeled in a Discrete State-Space block to our simulation (out of the Cooja platform.) in this step we will have different number of input and out put from our Cooja platform block, which has been created by the ADC-connector or DAC-connector components from the previous step. Now in this step the the outputs from the CoojaPlatform should be used as the input for our Plant model and the output of the plant model should be used as the input for the Cooja platform. following picture shows a simple environment and the relation between the Cooja platform and the plant model.

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/Simulink/AddingPlant.png" >

 = Configuration and running the simulation =
After preparing the simulation environment for the very last configuration, it is needed to set the Simulink simulation to act in a fix-step instead of variable-step. You can apply this configuration in the "configuration parameter" window which is accessible from "Simulation->Model Configuration Parameter" and finally change the type in the solver option to the fix-step. Now can also select the size of the sample time which we always config it to "0.001" to have an accuracy of one millisecond.

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/Simulink/Configuration.png" >

Now that both side of the simulation environment(Cooja and Simulink) has been configured, in order to run the simulation, we should first star the simulation in Simulink and the start the Cooja simulation. In this step first Simulink will start its simulation for very first milliseconds and then it will Waite until it receive a message from Cooja. The only important point in this action is that if Simulink cannot recive the message from Cooja in less than few seconds it will consider it as a problem and will go out from the simulation execution loop, so it is necessary to run the Cooja in few second after Simulink.

= Simple Scenario =

The wireless two-tank system is shown in the next figure. Water
is pumped from a reservoir to the upper tank, from which it flows through an outlet to the lower tank. Water from the lower tank flows through a similar outlet back to the reservoir. The pump is controlled
by an actuation signal, which is a control voltage applied to the motor. The water levels in both tanks are measured using pressure sensors in two T-mote Sky nodes. These motes contain ADCs (analogto-digital converters) and DACs (digital-to-analog converters), which are used to connect to the sensors and actuators in the physical system.
A Sensor Node reads measurements from the pressure sensor of the lower tank, and sends it to a Relay Node. The Relay Node forwards this data packet to the Controller Node, which runs the control algorithm. It generates an appropriate control signal, and sends this to the Actuator node, which applies the control voltage to the pump.
The aim of this scenario is to create such a system which can stabilize the water level in the lower tank on constant level (Level=5). As it has been explained for this experiment we have to program five different motes:
 
  * Sensor Node: A T-mote sky situated on the UPM is connected to the sensors from the tank process, and collects and transmits this information to the Controller node.
  * Controller Node: A T-mote sky is programmed with the controller algorithm. This node receives measurements from the Sensor Node, and transmits an appropriate control action to the Actuator Node.

  *Actuator Node: Another T-mote sky situated on the UPM is connected to the actuator of the tank process. This node receives the control signal from the controller and applies this voltage to the pump in the tank setup.

  *Relay Node: A T-mote sky is programmed to relay messages between the Sensor Node and the Controller Node. This introduces multi-hop communications in the network to make the situation more realistic.

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/helloworld/WaterTanksSystem.png" >

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/helloworld/SimpleTanks_Cooja.png" >

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/helloworld/SimpleTanks_CoojaPlatform2.png" >

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/helloworld/SimpleTanks_Simulink.png" >

<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/helloworld/WaterLevels.png" >


<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/how_to_use_GISOO/helloworld/ActuationVslues.png" >