<wiki:toc />
----
= General View=
<b>GISOO</b> stand for <b>G</b>raphical <b>I</b>ntegration of <b>S</b>imulink snd C<b>OO</b>ja and as the name represent each simulation in GISOO should be consist of the combination of two simulations, one in Cooja and one in Simulink which are synchronous together with the possibility of data communication. 
In fact all the wireless system (which also can contain the controller) will be simulated in the Cooja and the plant will be simulated in Simulink, and whenever simulated system in Cooja needs to measure some variables in plant or actuate some actuators there, the sensor or actuator mote in Cooja will send the request for sensor value or send the actuation data to their mirror sensor or actuator in the Simulink model which are in contact with the plant model and can receive the requested sensor data or apply the actuation value. The following picture show the genera view of the the GISOO which can show the mirror motes in Cooja and Simulink and the location of the motes in the relation with the plant. (The following picture show the situation that the controller located in one of the motes, but it is also possible to locate the controller in a PC)

<p align="center">   
<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/implementation_details/DesignedModel.png"  height="682px" width="637px">
<p>

In order to have the mentioned system worked, we needs to be able to have a proper data communication and also both systems should work synchronously. So the main facts to create GISOO are providing a proper data communication system and accurate synchronization. The following sections will explain the details of designed and implemented parts to achieve these goals. Since the data communication is also used for the synchronization, firstly we need to understand the data communication details.

= Data Communication=
In the first step to prepare the simulation in GISOO we need to add all the wireless motes to the Cooja environment and then in the next step we need to activate the provided GISOO-plug-in in Cooja (SimmulinkConnector) to handle the data communication and synchronization for GISOO. This plug-in will create a UDP port which the port number is equal to "18000+Mote-id" and it will listen on this port to receive the data from Simulink which are related to this mote. It means that each mote in Cooja will have its own specific UDP port to receive data. 

<p align="center">   
<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/implementation_details/Cooja_Mote_PortNumber.png"  >
<p>

On the other side Simulink model has different situation and all the Model will receive data from one predefined UDP port which by default is port number 5555. This means that all the data which should be received by Simulink or even specific part of Simulink model should be sent to this port.

<p align="center">   
<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/implementation_details/SimulinkReceivePortnumber.png" height="682px" width="737px" >
<p>

== Simulation procedure ==
In GISOO Cooja is responsible to control the simulation procedure. It means that Cooja will start simulating the wireless system until the moment that one of the motes in Cooja need to send or receives some data from plant model. This can happen in four situations:
  * A sensor mote need to sense some sensor data.
  * An actuator mote needs to apply some actuation values on the plant
  * A mote needs to send some serial data.
  * A mote needs to receive some serial data.
In any of these situations a mote in Cooja will send a message to the Simulink model to inform Simulink that at which moment which kind of action in which mote is required. To achieve this aim an especial message structure has been designed. This message contains four different parts: 
  * Simulation time
  * Mote-Pin-ID 
  * Actuation value (uValue)
  * Serial data
<b>Simulation time:</b> In the message structure the first four bytes considered for carrying the Simulation time (in millisecond). In fact Cooja will run until the moment that a mote needs an especial communication with Simulink, then it will generate a message and add the time of simulation in Cooja to the beginning of the message. On the other side, Simulink will pause the simulation untill it receive a message from Cooja. Then in the first step it will extract the Cooja time from the beginning the the message and will run the Simulink simulation to reach that specific moment. This procedure will be explained more in the synchronization explanation in this page.

<b>Mote-Pin-ID:</b> When ever a message generated by a mote in Cooja, Simulink as a receiver should be aware that this message came from which mote and should affect which part of that mote. For instance when a mote with id=4 needs to read data from its ADC1, in the message which will be send to Simulink both of the "mote-id" and "ADC1 (which we called it pin number)" should be clear. For this aim we generate a number by name fo mote-pin-id whch has been created by this method:

mote-pin-id = Mote-id*100 + pin number

and considered pin-ids are:

  ADC0 - ADC12 = 0 - 12
  DAC0 - DAC1  = 16 - 17
  Serial data to be sent to Simulink = 18
  Serial data to be received from Simulink = 19




<p align="center">   
<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/implementation_details/MSGStructure.png"  >
<p>



<p align="center">   
<img src="https://kth-gisoo.googlecode.com/svn/trunk/images/implementation_details/MSGTimeLine.png" height="782px" >
<p>

= Synchronization =
= GISOO Simulink Library Blocks =